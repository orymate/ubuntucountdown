<?php
# Copyright 2010 Mate Ory <orymate@ubuntu.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
function ubuntucountdown_block($op = 'list', $delta = '', $edit = array()) {
  // The $op parameter determines what piece of information is being requested.
  switch ($op) {
    case 'list':
      // If $op is "list", we just need to return a list of block descriptions.
      // This is used to provide a list of possible blocks to the administrator;
      // end users will not see these descriptions.
      $blocks['cdown'] = array(
        'info'       => t('Ubuntu release countdown'),
      );
      return $blocks;
    case 'configure':
      // If $op is "configure", we need to provide the administrator with a
      // configuration form. The $delta parameter tells us which block is being
      // configured. In this example, we'll allow the administrator to customize
      // the text of the first block.
      $form = array();
      if ($delta == 'cdown') {
        // All we need to provide is a text field, Drupal will take care of
        // the other block configuration options and the save button.
        $form['release_date'] = array(
          '#type' => 'textfield',
          '#title' => t('Release date'),
          '#size' => 60,
          '#description' => t('Release date in ISO format YYYY-MM-DD (HH:MM) or "over".'),
          '#default_value' => variable_get('cdown_release_date', '1970-01-01'),
        );
        $form['uri_base'] = array(
          '#type' => 'textfield',
          '#title' => t('URI template for image'),
          '#description' => t('You can use <a href="http://php.net/sprintf">printf-style</a> tokens for day count value.'),
          '#size' => 60,
          '#default_value' => variable_get('cdown_uri_base', 'http://example.com/files/cdown/1004/%02d.png'),
        );
        $form['over_uri'] = array(
          '#type' => 'textfield',
          '#title' => t('Count down over URI'),
          '#size' => 60,
          '#default_value' => variable_get('cdown_over_uri', 'http://example.com/files/cdown/1004/over.png'),
        );
        $form['ititle'] = array(
          '#type' => 'textfield',
          '#title' => t('Title of count down image'),
          '#size' => 60,
          '#default_value' => variable_get('cdown_ititle', ''),
        );
      }
      return $form;
    case 'save':
      // If $op is "save", we need to save settings from the configuration form.
      // Since the first block is the only one that allows configuration, we
      // need to check $delta to make sure we only save it.
      if ($delta == 'cdown') {
        // Have Drupal save the string to the database.
        variable_set('cdown_release_date', $edit['release_date']);
        variable_set('cdown_uri_base', $edit['uri_base']);
        variable_set('cdown_over_uri', $edit['over_uri']);
        variable_set('cdown_ititle', $edit['ititle']);
      }
      return;
    case 'view':
      // If $op is "view", then we need to generate the block for display
      // purposes. The $delta parameter tells us which block is being requested.
      switch ($delta) {
        case 'cdown':
          // The subject is displayed at the top of the block. Note that it
          // should be passed through t() for translation.
          $block['subject'] = '';
          $block['content'] = '<p>' .ubuntucountdown_contents() . '</p>';
          break;
      }
      return $block;
  }
}

function myimage($uri, $alt, $id=NULL, $class=NULL)
{
    $s =  '<img src="' . check_url($uri) . '" alt="' . check_plain($alt) . '" ';
    if ($id)
        $s .= 'id="' . check_plain($id) . '" ';
    if ($class)
        $s .= 'class ="' . check_plain($class ) . '" ';
    $s .= '/>';
    return $s;
}
function ubuntucountdown_contents()
{
    $release = variable_get('cdown_release_date', 'over');
    $uri = variable_get('cdown_uri_base', NULL);
    if ($uri === NULL)
        return t('Set URI pattern on block configuration page.');
    $diff = ceil((strtotime($release) - time())/(24.0*3600));
    if ($release == 'over' || $diff < 0)
        return myimage(
                     variable_get('cdown_over_uri', ''),
                     variable_get('cdown_ititle', ''), 'cdown');
    else
        return myimage(
                     sprintf(variable_get('cdown_uri_base', ''),$diff),
                     variable_get('cdown_ititle', ''), 'cdown');
}
